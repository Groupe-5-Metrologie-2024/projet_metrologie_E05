#Modules ---------------------------------------------------------------------------------------------------------------

import csv
import matplotlib.pyplot as plt
import numpy as np
import statistics as stat
import scipy
import numpy as np
from scipy.special import kv, iv
import os
import time

#fonctions -------------------------------------------------------------------------------------------------------------

def ouverture_fichier(nomfichier):
    with open(nomfichier, 'r') as csvfile:
        csvreader = csv.reader(csvfile)
        xc = []
        i = 0
        for row in csvreader:
            xc.append(float(row[1]))
            i += 1
            if i >= 1000:
                break
    return xc

def list_to_csv(input_list, file_name):

    # Obtenir le chemin du dossier actuel
    current_directory = os.getcwd()
    # Combiner le chemin du dossier avec le nom du fichier
    file_path = os.path.join(current_directory, file_name)
    
    with open(file_path, 'w', newline='') as csvfile:
        writer = csv.writer(csvfile)
        for row in input_list:
            writer.writerow([row])

def Calcul_total(file_name) :
    Lresultat = calcul_resitivite()
    list_to_csv(Lresultat, file_name)

def calcul_resitivite() :
    Liste = []
    x = [1,2,3]
    for i in x :
        Liste.append(i)

    return Liste

def attendre_fichier(nom_fichier, delai_attente=1):

    while not os.path.exists(nom_fichier):
        print(f"En attente du fichier {nom_fichier}...")
        time.sleep(delai_attente)


#Nom des fichiers ----------------------------------------------------------------------------------------------------------    

nom_fichier_temperature = "Temperature2"             # Remplacez "mon_fichier.csv" par le nom de votre fichier CSV
                                
nom_fichier_resistivite = "Resistivite"             # Remplacez "mon_fichier.csv" par le nom de votre fichier CSV

#Calcul resistivite --------------------------------------------------------------------------------------------------------

#Calcul_total(nom_fichier_resistivite)              #Retirer le # pour activer la fonction

#---

# Chemin vers votre fichier CSV d'entrée et de sortie
fichier_entree = "Temperature"
fichier_sortie = "Temperature2"

# Ouvrir le fichier d'entrée en mode lecture et le fichier de sortie en mode écriture
with open(fichier_entree, 'r', newline='') as csv_entree, open(fichier_sortie, 'w', newline='') as csv_sortie:
    lecteur_csv = csv.reader(csv_entree)
    lignes_modifiees = []
    
    # Parcourir chaque ligne du fichier CSV
    for ligne in lecteur_csv:
        ligne_modifiee = []
        # Parcourir chaque élément de la ligne
        for element in ligne:
            try:
                # Tente de convertir l'élément en un nombre
                nombre = float(element)
                # Si la conversion réussit, ajoute une virgule devant le nombre
                ligne_modifiee.append(',' + element)
            except ValueError:
                # Si la conversion échoue, conserve l'élément tel quel
                ligne_modifiee.append(element)
        
        # Ajouter la ligne modifiée à la liste des lignes modifiées
        lignes_modifiees.append(ligne_modifiee)

    # Écrire les lignes modifiées dans le fichier de sortie
    for ligne in lignes_modifiees:
        csv_sortie.write(','.join(ligne) + '\n')


#---

#Listes graphiques depuis les CSV ------------------------------------------------------------------------------------------ 

attendre_fichier(nom_fichier_resistivite)
attendre_fichier(nom_fichier_temperature)

x = ouverture_fichier(nom_fichier_temperature)
y = ouverture_fichier(nom_fichier_resistivite) 

#Generation des graphiques -------------------------------------------------------------------------------------------------

plt.plot(x, y)  
plt.xlabel('Température')  
plt.ylabel('Résistivité')  
plt.title('Graphique de la résistivite de l\'echantillon en fonction de la temperature')  
plt.grid(True)  
plt.show() 

#----------------------------------------------------------------------------------------------------------------------------
